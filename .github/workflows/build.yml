# This workflow will install Python dependencies and run tests.
# Based on https://github.com/actions/starter-workflows/blob/master/ci/python-package.yml

name: Build

on:
  push:
  # Run this workflow when a release is published using GitHub's web UI.
  # Pre-releases will also trigger the workflow, but draft releases won't.
  release:
    types: [published]

env:
  PIP_REQUIREMENTS: requirements-dev.txt

jobs:
  test:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: [3.7, 3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    # Load different caches for each runner.os
    # Based on https://github.com/actions/cache/blob/master/examples.md#multiple-oss-in-a-workflow
    - name: Cache dependencies (Linux)
      uses: actions/cache@v1
      if: startsWith(runner.os, 'Linux')
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles(env.PIP_REQUIREMENTS) }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-
          ${{ runner.os }}-pip-
    - name: Cache dependencies (Windows)
      uses: actions/cache@v1
      if: startsWith(runner.os, 'Windows')
      with:
        path: ~\AppData\Local\pip\Cache
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles(env.PIP_REQUIREMENTS) }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-
          ${{ runner.os }}-pip-

    - name: Install development dependencies (${{ env.PIP_REQUIREMENTS }})
      run: |
        python -m pip install --upgrade pip
        pip install -r ${{ env.PIP_REQUIREMENTS }}
    - name: Test with tox
      run: tox -e py

  publish:

    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'release'

    env:
      python-version: 3.8

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ env.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ env.python-version }}
    # Manual build step required because tox only builds an sdist and not wheels.
    - name: Build distributions
      run: |
        python -m pip install --upgrade pip
        pip install -r ${{ env.PIP_REQUIREMENTS }}
        python setup.py sdist bdist_wheel
    - name: Publish package to TestPyPI
      # Use SHA-1 hash because this GitHub Action isn't mature yet
      # TODO: Replace hash with a tag name when this becomes stable
      uses: pypa/gh-action-pypi-publish@37e305e7413032d8422456179fee28fac7d25187
      with:
        user: __token__
        password: ${{ secrets.TEST_PYPI_TOKEN }}
        repository_url: https://test.pypi.org/legacy/
